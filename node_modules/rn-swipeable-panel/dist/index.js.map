{"version":3,"file":"index.js","sources":["../src/Bar.tsx","../src/Close.tsx","../src/Panel.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\ntype BarProps = {\n  barStyle?: object;\n};\n\nexport const Bar = ({ barStyle }: BarProps) => {\n  return (\n    <View style={BarStyles.barContainer}>\n      <View style={[BarStyles.bar, barStyle]} />\n    </View>\n  );\n};\n\nconst BarStyles = StyleSheet.create({\n  barContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  bar: {\n    width: '10%',\n    height: 5,\n    borderRadius: 5,\n    marginTop: 10,\n    marginBottom: 10,\n    backgroundColor: '#e2e2e2',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, TouchableOpacity, View } from 'react-native';\n\ntype CloseProps = {\n  onPress: () => void;\n  rootStyle?: object;\n  iconStyle?: object;\n};\n\nexport const Close = ({ onPress, rootStyle, iconStyle }: CloseProps) => {\n  return (\n    <TouchableOpacity activeOpacity={0.5} onPress={() => onPress()} style={[CloseStyles.closeButton, rootStyle]}>\n      <View style={[CloseStyles.iconLine, iconStyle, { transform: [{ rotateZ: '45deg' }] }]} />\n      <View style={[CloseStyles.iconLine, iconStyle, { transform: [{ rotateZ: '135deg' }] }]} />\n    </TouchableOpacity>\n  );\n};\n\nconst CloseStyles = StyleSheet.create({\n  closeButton: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    position: 'absolute',\n    right: 15,\n    top: 15,\n    backgroundColor: '#e2e2e2',\n    zIndex: 3,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconLine: {\n    position: 'absolute',\n    width: 18,\n    height: 2,\n    borderRadius: 2,\n    backgroundColor: 'white',\n  },\n});\n","import React, { Component } from 'react';\nimport {\n  StyleSheet,\n  ScrollView,\n  View,\n  TouchableHighlight,\n  TouchableWithoutFeedback,\n  Animated,\n  Dimensions,\n  PanResponder,\n  ScrollViewProps,\n} from 'react-native';\n\nimport { Bar } from './Bar';\nimport { Close } from './Close';\n\nlet FULL_HEIGHT = Dimensions.get('window').height;\nlet FULL_WIDTH = Dimensions.get('window').width;\nlet PANEL_HEIGHT = FULL_HEIGHT - 100;\n\nconst STATUS = {\n  CLOSED: 0,\n  SMALL: 1,\n  LARGE: 2,\n};\n\ntype SwipeablePanelProps = {\n  isActive: boolean;\n  onClose: () => void;\n  showCloseButton?: boolean;\n  fullWidth?: boolean;\n  noBackgroundOpacity?: boolean;\n  style?: object;\n  closeRootStyle?: object;\n  closeIconStyle?: object;\n  closeOnTouchOutside?: boolean;\n  onlyLarge?: boolean;\n  onlySmall?: boolean;\n  openLarge?: boolean;\n  noBar?: boolean;\n  barStyle?: object;\n  allowTouchOutside?: boolean;\n  scrollViewProps?: ScrollViewProps;\n};\n\ntype MaybeAnimated<T> = T | Animated.Value;\n\ntype SwipeablePanelState = {\n  status: number;\n  isActive: boolean;\n  showComponent: boolean;\n  canScroll: boolean;\n  opacity: Animated.Value;\n  pan: any;\n  orientation: 'portrait' | 'landscape';\n  deviceWidth: number;\n  deviceHeight: number;\n  panelHeight: number;\n};\n\nclass SwipeablePanel extends Component<SwipeablePanelProps, SwipeablePanelState> {\n  pan: Animated.ValueXY;\n  isClosing: boolean;\n  _panResponder: any;\n  animatedValueY: number;\n  constructor(props: SwipeablePanelProps) {\n    super(props);\n    this.state = {\n      status: STATUS.CLOSED,\n      isActive: false,\n      showComponent: false,\n      canScroll: false,\n      opacity: new Animated.Value(0),\n      pan: new Animated.ValueXY({ x: 0, y: FULL_HEIGHT }),\n      orientation: FULL_HEIGHT >= FULL_WIDTH ? 'portrait' : 'landscape',\n      deviceWidth: FULL_WIDTH,\n      deviceHeight: FULL_HEIGHT,\n      panelHeight: PANEL_HEIGHT,\n    };\n\n    this.pan = new Animated.ValueXY({ x: 0, y: FULL_HEIGHT });\n    this.isClosing = false;\n    this.animatedValueY = 0;\n\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (evt, gestureState) => true,\n      onPanResponderGrant: (evt, gestureState) => {\n        this.state.pan.setOffset({\n          x: 0,\n          y: this.animatedValueY,\n        });\n        this.state.pan.setValue({ x: 0, y: 0 });\n      },\n      onPanResponderMove: (evt, gestureState) => {\n        if (\n          (this.state.status === 1 && Math.abs(this.state.pan.y._value) <= this.state.pan.y._offset) ||\n          (this.state.status === 2 && this.state.pan.y._value > -1)\n        )\n          this.state.pan.setValue({\n            x: 0,\n            y: this.state.status === STATUS.LARGE ? Math.max(0, gestureState.dy) : gestureState.dy,\n          });\n      },\n      onPanResponderRelease: (evt, gestureState) => {\n        const { onlyLarge, onlySmall } = this.props;\n        this.state.pan.flattenOffset();\n\n        if (gestureState.dy === 0) this._animateTo(this.state.status);\n        else if (gestureState.dy < -100 || gestureState.vy < -0.5) {\n          if (this.state.status === STATUS.SMALL) this._animateTo(onlySmall ? STATUS.SMALL : STATUS.LARGE);\n          else this._animateTo(STATUS.LARGE);\n        } else if (gestureState.dy > 100 || gestureState.vy > 0.5) {\n          if (this.state.status === STATUS.LARGE) this._animateTo(onlyLarge ? STATUS.CLOSED : STATUS.SMALL);\n          else this._animateTo(0);\n        } else this._animateTo(this.state.status);\n      },\n    });\n  }\n\n  componentDidMount = () => {\n    const { isActive, openLarge, onlyLarge, onlySmall } = this.props;\n\n    this.animatedValueY = 0;\n    this.state.pan.y.addListener((value: any) => (this.animatedValueY = value.value));\n\n    this.setState({ isActive });\n\n    if (isActive)\n      this._animateTo(onlySmall ? STATUS.SMALL : openLarge ? STATUS.LARGE : onlyLarge ? STATUS.LARGE : STATUS.SMALL);\n\n    Dimensions.addEventListener('change', this._onOrientationChange);\n  };\n\n  _onOrientationChange = () => {\n    const dimesions = Dimensions.get('screen');\n    FULL_HEIGHT = dimesions.height;\n    FULL_WIDTH = dimesions.width;\n    PANEL_HEIGHT = FULL_HEIGHT - 100;\n\n    this.setState({\n      orientation: dimesions.height >= dimesions.width ? 'portrait' : 'landscape',\n      deviceWidth: FULL_WIDTH,\n      deviceHeight: FULL_HEIGHT,\n      panelHeight: PANEL_HEIGHT,\n    });\n\n    this.props.onClose();\n  };\n\n  componentDidUpdate(prevProps: SwipeablePanelProps, prevState: SwipeablePanelState) {\n    const { isActive, openLarge, onlyLarge, onlySmall } = this.props;\n    if (onlyLarge && onlySmall)\n      console.warn(\n        'Ops. You are using both onlyLarge and onlySmall options. onlySmall will override the onlyLarge in this situation. Please select one of them or none.',\n      );\n\n    if (prevProps.isActive !== isActive) {\n      this.setState({ isActive });\n\n      if (isActive) {\n        this._animateTo(onlySmall ? STATUS.SMALL : openLarge ? STATUS.LARGE : onlyLarge ? STATUS.LARGE : STATUS.SMALL);\n      } else {\n        this._animateTo();\n      }\n    }\n\n    if (prevState.orientation !== this.state.orientation) this._animateTo(this.state.status);\n  }\n\n  _animateTo = (newStatus = 0) => {\n    let newY = 0;\n\n    if (newStatus === STATUS.CLOSED) newY = PANEL_HEIGHT;\n    else if (newStatus === STATUS.SMALL)\n      newY = this.state.orientation === 'portrait' ? FULL_HEIGHT - 400 : FULL_HEIGHT / 3;\n    else if (newStatus === STATUS.LARGE) newY = 0;\n\n    this.setState({\n      showComponent: true,\n      status: newStatus,\n    });\n\n    Animated.spring(this.state.pan, {\n      toValue: { x: 0, y: newY },\n      tension: 80,\n      friction: 25,\n      useNativeDriver: true,\n      restDisplacementThreshold: 10,\n      restSpeedThreshold: 10,\n    }).start(() => {\n      if (newStatus === 0) {\n        this.props.onClose();\n        this.setState({\n          showComponent: false,\n        });\n      } else this.setState({ canScroll: newStatus === STATUS.LARGE ? true : false });\n    });\n  };\n\n  render() {\n    const { showComponent, deviceWidth, deviceHeight, panelHeight } = this.state;\n    const {\n      noBackgroundOpacity,\n      style,\n      barStyle,\n      closeRootStyle,\n      closeIconStyle,\n      onClose,\n      allowTouchOutside,\n      closeOnTouchOutside,\n    } = this.props;\n\n    return showComponent ? (\n      <Animated.View\n        style={[\n          SwipeablePanelStyles.background,\n          {\n            backgroundColor: noBackgroundOpacity ? 'rgba(0,0,0,0)' : 'rgba(0,0,0,0.5)',\n            height: allowTouchOutside ? 'auto' : deviceHeight,\n            width: deviceWidth,\n          },\n        ]}\n      >\n        {closeOnTouchOutside && (\n          <TouchableWithoutFeedback onPress={() => onClose()}>\n            <View\n              style={[\n                SwipeablePanelStyles.background,\n                {\n                  width: deviceWidth,\n                  backgroundColor: 'rgba(0,0,0,0)',\n                  height: allowTouchOutside ? 'auto' : deviceHeight,\n                },\n              ]}\n            />\n          </TouchableWithoutFeedback>\n        )}\n        <Animated.View\n          style={[\n            SwipeablePanelStyles.panel,\n            {\n              width: this.props.fullWidth ? deviceWidth : deviceWidth - 50,\n              height: panelHeight,\n            },\n            { transform: this.state.pan.getTranslateTransform() },\n            style,\n          ]}\n          {...this._panResponder.panHandlers}\n        >\n          {!this.props.noBar && <Bar barStyle={barStyle} />}\n          {this.props.showCloseButton && (\n            <Close rootStyle={closeRootStyle} iconStyle={closeIconStyle} onPress={this.props.onClose} />\n          )}\n          <ScrollView\n            onTouchStart={() => {\n              return false;\n            }}\n            onTouchEnd={() => {\n              return false;\n            }}\n            contentContainerStyle={SwipeablePanelStyles.scrollViewContentContainerStyle}\n            {...this.props.scrollViewProps}\n          >\n            {this.state.canScroll ? (\n              <TouchableHighlight>\n                <React.Fragment>{this.props.children}</React.Fragment>\n              </TouchableHighlight>\n            ) : (\n              this.props.children\n            )}\n          </ScrollView>\n        </Animated.View>\n      </Animated.View>\n    ) : null;\n  }\n}\n\nconst SwipeablePanelStyles = StyleSheet.create({\n  background: {\n    position: 'absolute',\n    zIndex: 1,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  panel: {\n    position: 'absolute',\n    height: PANEL_HEIGHT,\n    width: FULL_WIDTH - 50,\n    transform: [{ translateY: FULL_HEIGHT - 100 }],\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'white',\n    bottom: 0,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    overflow: 'hidden',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.18,\n    shadowRadius: 1.0,\n    elevation: 1,\n    zIndex: 2,\n  },\n  scrollViewContentContainerStyle: {\n    width: '100%',\n  },\n});\n\nconst SMALL_PANEL_CONTENT_HEIGHT = PANEL_HEIGHT - (FULL_HEIGHT - 400) - 25;\nconst LARGE_PANEL_CONTENT_HEIGHT = PANEL_HEIGHT - 25;\n\nexport { SwipeablePanel, LARGE_PANEL_CONTENT_HEIGHT, SMALL_PANEL_CONTENT_HEIGHT };\n"],"names":["Bar","barStyle","React.createElement","View","BarStyles","barContainer","bar","StyleSheet","create","display","justifyContent","alignItems","width","height","borderRadius","marginTop","marginBottom","backgroundColor","Close","onPress","rootStyle","iconStyle","TouchableOpacity","CloseStyles","closeButton","iconLine","transform","rotateZ","position","right","top","zIndex","FULL_HEIGHT","Dimensions","get","FULL_WIDTH","PANEL_HEIGHT","STATUS","CLOSED","SMALL","LARGE","SwipeablePanel","props","isActive","openLarge","onlyLarge","onlySmall","animatedValueY","state","pan","y","addListener","value","setState","_animateTo","addEventListener","_onOrientationChange","dimesions","orientation","deviceWidth","deviceHeight","panelHeight","onClose","newStatus","newY","showComponent","status","Animated","spring","toValue","x","tension","friction","useNativeDriver","restDisplacementThreshold","restSpeedThreshold","start","canScroll","opacity","Value","ValueXY","isClosing","_panResponder","PanResponder","onStartShouldSetPanResponder","evt","gestureState","onPanResponderGrant","setOffset","setValue","onPanResponderMove","Math","abs","_value","_offset","max","dy","onPanResponderRelease","flattenOffset","vy","componentDidUpdate","prevProps","prevState","console","warn","render","noBackgroundOpacity","style","closeRootStyle","closeIconStyle","allowTouchOutside","closeOnTouchOutside","React","SwipeablePanelStyles","background","TouchableWithoutFeedback","panel","fullWidth","getTranslateTransform","panHandlers","noBar","showCloseButton","ScrollView","scrollViewContentContainerStyle","scrollViewProps","TouchableHighlight","children","Component","bottom","translateY","flexDirection","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","overflow","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","SMALL_PANEL_CONTENT_HEIGHT","LARGE_PANEL_CONTENT_HEIGHT"],"mappings":"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"}